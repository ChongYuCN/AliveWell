plugins {
    id 'fabric-loom' version '1.1-SNAPSHOT'
    id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

repositories {
    // Add repositories to retrieve artifacts from in here.
    // You should only use this when depending on other mods because
    // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
    // See https://docs.gradle.org/current/userguide/declaring_repositories.html
    // for more information about repositories.


    maven {
        //portal
        url = "http://maven.kyrptonaught.dev"
        allowInsecureProtocol = true
    }

    //mordrinth平台模组库
    maven { url "https://api.modrinth.com/maven" }

    //player reach distance
//    maven {
//        url "https://maven.jamieswhiteshirt.com/libs-release"
//        content {
//            includeGroup "com.jamieswhiteshirt"
//        }
//    }

}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    //portal：0.0.1-beta59-1.19
    modImplementation 'net.kyrptonaught:customportalapi:0.0.1-beta54-1.19'
    include 'net.kyrptonaught:customportalapi:0.0.1-beta54-1.19'

    //mordrinth平台模组库
    // LevelZ
    modImplementation ('maven.modrinth:levelz:1.4.9+1.19.2') {
        exclude(group: "net.fabricmc.fabric-api")
    }

    //mordrinth平台模组库

    //示例：xpgui（未开源）【只要版本号Version number可以区分就可以构建环境】（loom会自动反编译未开源代码）
    //一、如：版本号原先为1.0.1，无法区分版本，只需在mordrinth平台版本号更改为mc1.19.2-1.0.1，就可以构建环境，
    // 如maven.modrinth:xpgui:mc1.19.2-1.0.1
//    modImplementation ('maven.modrinth:xpgui:mc1.19.2-1.0.1')

    //二、如xpgui。若版本号无法区分，则更改为Project ID：Version ID，如crafttime的依赖添加：maven.modrinth:VG8MXUCd:nBrjlAvT，
    // 其中VG8MXUCd为xpgui的项目ID，nBrjlAvT为1.19.2版本的ID
    //注意：项目ID和版本ID要同时使用
//    modImplementation ('maven.modrinth:VG8MXUCd:nBrjlAvT')

    // 将mod作为API添加到Fabric开发环境并将其包含在你的模组jar中
//    include("maven.modrinth:trinkets:3.4.0")

    //player reach distance
//    modImplementation"com.jamieswhiteshirt:reach-entity-attributes:2.3.0"
//    include "com.jamieswhiteshirt:reach-entity-attributes:2.3.0"

//    //mordrinth平台模组库
//    //iris
//    modImplementation ('maven.modrinth:iris:1.6.10+1.19.2') {
//        exclude(group: "net.fabricmc.fabric-api")
//    }
}

loom {
    accessWidenerPath.set(file("src/main/resources/aliveandwell.accessWidener"))
}

processResources {
    inputs.property "version", project.version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

def targetJavaVersion = 17
tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release = targetJavaVersion
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    archivesBaseName = project.archives_base_name
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}
